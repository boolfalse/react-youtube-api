{"version":3,"sources":["Suggestions.js","App.js","index.js"],"names":["Suggestions","props","results","map","r","i","href","videoId","className","src","thumbnail","alt","title","substring","API_URL","process","Search","state","query","getInfo","fetchJsonp","then","response","json","fetchedData","items","suggestions","forEach","element","push","id","snippet","thumbnails","default","url","publishedAt","setState","catch","ex","console","log","handleInputChange","search","value","length","placeholder","ref","input","onChange","this","list","type","name","aria-label","xmlns","width","height","viewBox","fill","stroke","strokeWidth","strokeLinecap","x1","y1","x2","y2","Component","ReactDOM","render","document","getElementById"],"mappings":"oPAceA,EAZK,SAACC,GASnB,OARgBA,EAAMC,QAAQC,KAAK,SAACC,EAAEC,GAAH,OAC/B,6BACE,oBAAGC,KAAM,mCAAqCF,EAAEG,QAAhD,UACE,qBAAKC,UAAU,aAAaC,IAAKL,EAAEM,UAAWC,IAAK,SAAWN,IAC9D,sBAAMG,UAAU,eAAhB,SAAgCJ,EAAEQ,MAAMC,UAAU,EAAE,UAH/CT,EAAEG,QAAUF,OCGrBS,G,MAAO,+EADM,EACN,2BAAwGC,0CAAxG,QA4FEC,E,4MAzFbC,MAAQ,CACNC,MAAO,GACPhB,QAAS,I,EAGXiB,QAAU,WACRC,IAAW,GAAD,OAAIN,EAAJ,cAAiB,EAAKG,MAAMC,QACnCG,MAAK,SAASC,GACb,OAAOA,EAASC,UAEjBF,MAAK,SAAAE,GACJ,IAAMC,EAAcD,EAAKE,MACrBC,EAAc,GAClBF,EAAYG,SAAQ,SAAAC,GAClBF,EAAYG,KAAK,CACftB,QAASqB,EAAQE,GAAGvB,QACpBK,MAAOgB,EAAQG,QAAQnB,MACvBF,UAAWkB,EAAQG,QAAQC,WAAWC,QAAQC,IAC9CC,YAAaP,EAAQG,QAAQI,iBAGjC,EAAKC,SAAS,CACZlC,QAAQ,GAAD,OAAMwB,QAGhBW,OAAM,SAASC,GACdC,QAAQC,IAAI,iBAAkBF,O,EAIpCG,kBAAoB,WAClB,EAAKL,SACH,CACElB,MAAO,EAAKwB,OAAOC,QAErB,WACM,EAAK1B,MAAMC,OAAS,EAAKD,MAAMC,MAAM0B,OAAS,EAChD,EAAKzB,UAEL,EAAKiB,SAAS,CACZlC,QAAS,S,uDAOT,IAAD,OACP,OACA,+BACE,sBAAKM,UAAU,iBAAf,UACE,uBACIA,UAAU,YACVqC,YAAY,gBACZC,IAAK,SAAAC,GAAK,OAAK,EAAKL,OAASK,GAC7BC,SAAUC,KAAKR,kBACfS,KAAK,WACLC,KAAK,OACLC,KAAK,WACLtB,GAAG,WACHuB,aAAW,iBAEf,mBAAG7C,UAAU,aAAaF,KAAK,wBAA/B,SACE,sBACIgD,MAAM,6BACNC,MAAM,KACNC,OAAO,KACPC,QAAQ,YACRC,KAAK,OACLC,OAAO,eACPC,YAAY,IACZC,cAAc,QARlB,UAUE,sBAAMC,GAAG,IAAIC,GAAG,KAAKC,GAAG,KAAKC,GAAG,OAChC,sBAAMH,GAAG,KAAKC,GAAG,IAAIC,GAAG,KAAKC,GAAG,OAChC,sBAAMH,GAAG,KAAKC,GAAG,KAAKC,GAAG,KAAKC,GAAG,YAGrC,qBAAKzD,UAAU,iBAAf,SACE,oBAAIsB,GAAG,WAAWtB,UAAU,yBAA5B,SACE,cAAC,EAAD,CAAaN,QAAS+C,KAAKhC,MAAMf,uB,GAjFxBgE,aCHrBC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.930ab48e.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Suggestions = (props) => {\r\n  const options = props.results.map( (r,i) => (\r\n      <li key={r.videoId + i}>\r\n        <a href={\"https://www.youtube.com/watch?v=\" + r.videoId}>\r\n          <img className=\"result-img\" src={r.thumbnail} alt={\"Image \" + i} />\r\n          <span className=\"result-title\">{r.title.substring(0,50)}</span>\r\n        </a>\r\n      </li>\r\n  ))\r\n  return options\r\n}\r\n\r\nexport default Suggestions","\r\nimport React, { Component } from \"react\";\r\nimport fetchJsonp from \"fetch-jsonp\";\r\nimport Suggestions from \"./Suggestions\";\r\nimport \"./App.css\";\r\n\r\nconst maxResults = 5;\r\nconst API_URL = `https://www.googleapis.com/youtube/v3/search?part=snippet&maxResults=${maxResults}&type=video&key=${process.env.REACT_APP_YOUTUBE_DATA_API_V3_KEY}&q=`;\r\n\r\nclass Search extends Component {\r\n  state = {\r\n    query: \"\",\r\n    results: []\r\n  };\r\n\r\n  getInfo = () => {\r\n    fetchJsonp(`${API_URL} + ${this.state.query}`)\r\n      .then(function(response) {\r\n        return response.json();\r\n      })\r\n      .then(json => {\r\n        const fetchedData = json.items;\r\n        let suggestions = [];\r\n        fetchedData.forEach(element => {\r\n          suggestions.push({\r\n            videoId: element.id.videoId,\r\n            title: element.snippet.title,\r\n            thumbnail: element.snippet.thumbnails.default.url,\r\n            publishedAt: element.snippet.publishedAt\r\n          });\r\n        });\r\n        this.setState({\r\n          results: [...suggestions]\r\n        });\r\n      })\r\n      .catch(function(ex) {\r\n        console.log(\"parsing failed\", ex);\r\n      });\r\n  };\r\n\r\n  handleInputChange = () => {\r\n    this.setState(\r\n      {\r\n        query: this.search.value\r\n      },\r\n      () => {\r\n        if (this.state.query && this.state.query.length > 1) {\r\n          this.getInfo();\r\n        } else {\r\n          this.setState({\r\n            results: []\r\n          });\r\n        }\r\n      }\r\n    );\r\n  };\r\n\r\n  render() {\r\n    return (\r\n    <form>\r\n      <div className=\"wrapper-search\">\r\n        <input\r\n            className=\"searchbar\"\r\n            placeholder=\"Search for...\"\r\n            ref={input => (this.search = input)}\r\n            onChange={this.handleInputChange}\r\n            list=\"datalist\"\r\n            type=\"text\"\r\n            name=\"search_p\"\r\n            id=\"search_p\"\r\n            aria-label=\"Search field\"\r\n        />\r\n        <a className=\"btn-submit\" href=\"https://boolfalse.com\">\r\n          <svg\r\n              xmlns=\"http://www.w3.org/2000/svg\"\r\n              width=\"32\"\r\n              height=\"32\"\r\n              viewBox=\"0 0 24 24\"\r\n              fill=\"none\"\r\n              stroke=\"currentColor\"\r\n              strokeWidth=\"2\"\r\n              strokeLinecap=\"round\"\r\n          >\r\n            <line x1=\"0\" y1=\"15\" x2=\"23\" y2=\"15\"></line>\r\n            <line x1=\"15\" y1=\"8\" x2=\"23\" y2=\"15\"></line>\r\n            <line x1=\"15\" y1=\"22\" x2=\"23\" y2=\"15\"></line>\r\n          </svg>\r\n        </a>\r\n        <div className=\"container_list\">\r\n          <ul id=\"datalist\" className=\"container_list-wrapper\">\r\n            <Suggestions results={this.state.results} />\r\n          </ul>\r\n        </div>\r\n      </div>\r\n    </form>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Search;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n// import registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n// registerServiceWorker();\r\n"],"sourceRoot":""}